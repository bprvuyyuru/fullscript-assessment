{"version":3,"sources":["logo.svg","components/Searchphotos.js","components/Heading.js","App.js","reportWebVitals.js","index.js"],"names":["unsplash","Unsplash","accessKey","Input","styled","input","Button","button","WrapperImages","div","Searchphotos","useState","query","setQuery","pics","setPics","Card","map","pic","alt","alt_description","src","urls","full","width","height","searchPhotos","e","a","preventDefault","search","photos","then","toJson","json","results","onSubmit","value","onChange","target","type","placeholder","Header","header","H1","h1","Heading","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,I,ivBCSf,IAAMA,EAAW,I,OAAIC,GAAS,CAC5BC,UAAW,gDAIPC,EAAQC,IAAOC,MAAV,KAaLC,EAASF,IAAOG,OAAV,KAUNC,EAAgBJ,IAAOK,IAAV,KAWJ,SAASC,IAAe,MAGTC,mBAAS,IAHA,mBAG5BC,EAH4B,KAGrBC,EAHqB,OAIXF,mBAAS,IAJE,mBAI5BG,EAJ4B,KAItBC,EAJsB,KAOnC,SAASC,IACL,OAAO,mCACJF,EAAKG,KAAI,SAACC,GAAD,OAAO,8BACb,qBAAKC,IAAKD,EAAIE,gBACVC,IAAKH,EAAII,KAAKC,KACdC,MAAM,OACNC,OAAO,gBAOrB,IAAMC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACrBD,EAAEE,iBACF7B,EAAS8B,OACRC,OAAOnB,EAAO,EAAG,IACjBoB,KAAKC,UACLD,MAAK,SAACE,GACLnB,EAAQmB,EAAKC,YANM,2CAAH,sDAUpB,OACE,qCACG,uBAAMC,SAAUV,EAAhB,UACC,cAACvB,EAAD,CAAOkC,MAAOzB,EAAO0B,SAAU,SAACX,GAAD,OAAKd,EAASc,EAAEY,OAAOF,QAAQG,KAAK,OAAOC,YAAY,kBACtF,cAACnC,EAAD,CAAQkC,KAAK,SAAb,uBAEF,mDAAqB,4BAAI5B,OACzB,cAACJ,EAAD,UAAe,cAACQ,EAAD,S,6QC7ErB,IAAM0B,EAAStC,IAAOuC,OAAV,KAMNC,EAAKxC,IAAOyC,GAAV,KAQKC,EAAU,WAErB,OACE,eAACJ,EAAD,WACE,cAACE,EAAD,yBACA,oFACA,cAAClC,EAAD,Q,gBChBN,SAASqC,IACP,OACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACG,kBACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,2BAA3B,2BAEQ,KACP,IAAIC,MAAOC,cACX,OAgBQC,MATf,WACE,OACE,qCACA,cAAC,EAAD,IACA,cAACT,EAAD,QCnBWU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.32022466.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","///////////////////// Search photos component ///////////////////\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { useState} from 'react';\nimport Unsplash, {toJson} from 'unsplash-js';\n\n\n/////// access key /////////\nconst unsplash = new Unsplash({\n  accessKey: '5iA_FL8TsamkyK6RPc1LnFQyWICUKvkY0_jvx2gZk_I'\n});\n\n///// Styling using styled-components /////////////\nconst Input = styled.input`\n  height: 2.5rem;\n  width: 20rem;\n  margin-top: 1em;\n  outline: none;\n  text-indent: 1em;\n  font-size: 1em;\n\n  ::placeholder {\n    font-size: .8em;\n  }\n`;\n\nconst Button = styled.button`\n  height: 2.5rem;\n  padding: 0 1em;\n  outline: none;\n  cursor: pointer;\n  background: #222;\n  border: none;\n  color: #fff;\n  font-size: 1em;\n`;\nconst WrapperImages = styled.div`\n  max-width: 70rem;\n  margin: 4rem auto;\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  grid-auto-rows: 200px;\n`;\n//////////////////////// end of styling ////////////////////\n\n\nexport default function Searchphotos() {\n\n    /////// creating UseState to updtae the data /////////////\n    const [query, setQuery] = useState(\"\");\n    const [pics, setPics] = useState([]);\n\n    ///////// creating card to display the pics ///////////\n    function Card(){\n        return <>\n          {pics.map((pic)=><div>\n              <img alt={pic.alt_description}\n                  src={pic.urls.full}\n                  width=\"100%\"\n                  height=\"100%\"></img>\n          </div>)}\n      </>\n    }\n    \n    /////////////// fetching the images from unsplash api ////////////////\n    \n    const searchPhotos = async (e) => {\n    e.preventDefault();\n    unsplash.search\n    .photos(query, 1, 40)\n    .then(toJson)\n    .then((json) => {\n      setPics(json.results);\n    });\n\n  };\n  return (\n    <>\n       <form onSubmit={searchPhotos}>\n        <Input value={query} onChange={(e)=>setQuery(e.target.value)} type=\"text\" placeholder=\"Search photos\" />\n        <Button type=\"submit\" >Search</Button>\n      </form>\n      <p>Images related to <b>{query}</b></p>\n      <WrapperImages><Card /></WrapperImages>\n    </>\n  );\n}","//////////////// heading component //////////////////////\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Searchphotos from './Searchphotos';\n\n\n////////// creating styles using styled-components ///////////////\nconst Header = styled.header`\n  max-width: 70rem;\n  margin: 2rem auto;\n  text-align: center;\n`;\n\nconst H1 = styled.h1`\n  font-family: 'Oswald', sans-serif;\n  margin-bottom: 1em;\n`;\n\n/////////////////////// end of style /////////////////////////////\n\n\nexport const Heading = () => {\n\n  return (\n    <Header>\n      <H1>Fullsplash</H1>\n      <p>The internet’s source of freely usable images.</p>\n      <Searchphotos />\n    </Header>\n  )\n}","/////////////// App ///////////////////\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { Heading } from './components/Heading';\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\n// TODO: Replace \"APP_ACCESS_KEY\" with your own key, which\n// can be generated here: https://unsplash.com/developers\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Bhanu Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\n\n\nfunction App() {\n  return (\n    <>\n    <Heading />\n    <Copyright />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}